// This file has been reverse-engineered from a transpiled library definition
// and does not represent the original source of the decision support logic
// Generated by SanteDB v3.0.2013.0 on 2025-09-06T13:37:41.1451584-04:00
include <org.santedb.cdss.core>
define library "Routine Collection of Pregnancy Status"
	having id <org.santedb.cdss.anc.pregnancyStatus>
	having uuid {4c9aa1be-8a82-11f0-9dc3-d7cfc28c5db3}
	having oid "1.3.5.1.4.1.52820.5.3.2.0"
	having status active
	with metadata
		version 3.05
	end metadata
	as
	define logic "Routine Collection of Pregnancy Status Patient"
		having context Patient when all(
				"Patient Is Female of Childbearing Age"
			)

		import model "Prompt Patient Pregnancy Status" from <org.santedb.emr.pregnancy.status>
		import model "Prompt Patient Pregnancy History" from <org.santedb.emr.pregnancy.history>
		as
    		define fact "Patient Current Pregnancy Status"
    		as
    			query(
    				from hdsi($$participation[RecordTarget]$$)
    				where hdsi($$source@CodedObservation.typeConcept=afc33800-8225-4061-b168-bacc09cdbae3&
    	                source@CodedObservation.isNegated=false&
    	                source@CodedObservation.statusConcept=!BDEF5F90-5497-4F26-956C-8F818CCE2BD2$$)
    				select last hdsi($$source@CodedObservation$$)
    				order by hdsi($$source.actTime$$)
    			)
    
    		end fact
    		
    		define fact "Patient Has Pregnancy History Record" having type bool 
    		as 
    		    hdsi($$ participation[RecordTarget].source.typeConcept=04d5b5e8-570e-4244-805a-e448978a19bd&participation[RecordTarget].source.statusConcept=!bdef5f90-5497-4f26-956c-8f818cce2bd2 $$)
    		end fact
    		
    		
    		define fact "Patient Is Currently Pregnant"
    			having type bool
    		as
    			hdsi($$$self@CodedObservation.value.conceptSet=!8e848f0e-890b-11f0-ae3f-9f37087e0822$$ scoped-to fact "Patient Current Pregnancy Status")
    		end fact
    		
    		define fact "Should Prompt for Updated Pregnancy Status"
    			having type bool
    		as
    			any(
    				none(
    					"Patient Current Pregnancy Status"
    				),
    				all(
    					none(
    						"Patient Is Currently Pregnant",
    						hdsi($$$self@CodedObservation.actTime=:(age)<30d$$ scoped-to fact "Patient Current Pregnancy Status")
    					)
    				)
    			)
    		end fact
    		
    		define protocol "Prompt For Patient Pregnancy Status"
    			having id <org.santdb.cdss.anc.pregnancyStatus.prompt>
    			having uuid {9dbab07d-79f2-4eba-83f3-e3d6dc48d7cb}
    			having oid "1.3.5.1.4.1.52820.5.3.2.0.1"
    			having scope <org.santedb.emr.patient.registration>
    			having scope <org.santedb.emr.act.visit.general>
    			having scope <org.santedb.emr.act.visit.anc>
    		as
    			when
    				"Should Prompt for Updated Pregnancy Status"
    			then
    				propose  having model "Prompt Patient Pregnancy Status"
    				as
    					assign csharp($$DateTimeOffset.Now$$) to actTime overwrite
    				end propose
    		end protocol
    		
    		define protocol "Prompt For Patient Pregnancy History" 
    		    having id <org.santedb.cdss.anc.pregnancy.history.prompt>
    		    having uuid {b50ef8f4-f976-460a-b282-9a139ada7e9d}
    		    having oid "1.3.5.1.4.1.52820.5.3.2.0.2"
    		    having scope <org.santedb.emr.patient.registration>
    		    having scope <org.santedb.emr.act.visit.anc>
    		 as 
    		    when 
    		        none("Patient Has Pregnancy History Record")
    		    then 
    		        propose having model "Prompt Patient Pregnancy History" as 
    		            assign csharp($$DateTimeOffset.Now$$) to actTime overwrite
    		        end propose
    		end protocol
	end logic
	define logic "Analyze Pregnancy Status and Compute EDD / Gestational Age from LMP"
		having context CodedObservation when hdsi($$typeConcept=7bb3403e-d8ee-4b91-8a77-64da4f459415$$)
		import model "Propose EDD" from <org.santedb.emr.pregnancy.edd>
		import model "Propose Age of Fetus" from <org.santedb.emr.pregnancy.aof>
		as
		define fact "LMP Observation Component"
		as
			query(
				from hdsi($$relationship[HasComponent]$$)
				where hdsi($$target.typeConcept=54843f39-8820-4856-951c-1bcd4812bdce$$)
				select first hdsi($$target@DateObservation$$)
			)

		end fact
		define fact "EDD Observation Component"
		as
			query(
				from hdsi($$relationship[HasComponent]$$)
				where hdsi($$target.typeConcept=673ac0e2-8468-43ca-9e54-cadf413dfede$$)
				select first hdsi($$target.id$$)
			)

		end fact
		define fact "Gestational Age Component"
		as
			query(
				from hdsi($$relationship[HasComponent]$$)
				where hdsi($$target.typeConcept=fdaf1790-1868-11eb-adc1-0242ac120002$$)
				select first hdsi($$target.id$$)
			)

		end fact
		define fact "Age of Fetus in Weeks"
			having type int
		as
			csharp($$(int)(DateTime.Now.Subtract(((DateObservation)actf("LMP Observation Component")).Value.Value).TotalDays / 7)$$)
		end fact
		define fact "Estimated Delivery Date"
			having type date
		as
			csharp($$((DateObservation)actf("LMP Observation Component")).Value.Value.AddDays(280)$$)
		end fact
		define rule "Populate the EDD and Age Of Fetus"
		as
			when
				csharp($$true$$)
			then
				propose  having model "Propose EDD"
				as
					assign "Estimated Delivery Date" to value overwrite
					assign "EDD Observation Component" to tag[$cdss.overwriteComponent].value overwrite
				end propose
				propose  having model "Propose Age of Fetus"
				as
					assign "Age of Fetus in Weeks" to value overwrite
					assign "Gestational Age Component" to tag[$cdss.overwriteComponent].value overwrite
				end propose
		end rule
	end logic
end library
